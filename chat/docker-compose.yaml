version: '3.8'

services:
  postgres:
    image: postgres:13-alpine
    container_name: mattermost_postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: mattermost
      POSTGRES_USER: mattermost
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - mattermost_internal
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U mattermost"]
      interval: 30s
      timeout: 10s
      retries: 5

  mattermost:
    image: mattermost/mattermost-enterprise-edition:7.8
    container_name: mattermost_app
    restart: unless-stopped
    ports:
      - "8065:8065"
    environment:
      MM_SQLSETTINGS_DRIVERNAME: postgres
      MM_SQLSETTINGS_DATASOURCE: postgres://mattermost:${POSTGRES_PASSWORD}@postgres:5432/mattermost?sslmode=disable&connect_timeout=10
      MM_SERVICESETTINGS_SITEURL: http://localhost:8065
      MM_SERVICESETTINGS_ENABLEBOTACCOUNTCREATION: "true"
      MM_SERVICESETTINGS_ENABLEINCOMINGWEBHOOKS: "true"
      MM_SERVICESETTINGS_ENABLEOUTGOINGWEBHOOKS: "true"
      MM_PLUGINSETTINGS_ENABLE: "true"
      MM_TEAMSETTINGS_ENABLETEAMCREATION: "true"
      MM_TEAMSETTINGS_ENABLEUSERCREATION: "true"
    volumes:
      - mattermost_data:/mattermost/data
      - mattermost_logs:/mattermost/logs
      - mattermost_config:/mattermost/config
    networks:
      - mattermost_internal
    depends_on:
      postgres:
        condition: service_healthy

volumes:
  postgres_data:
  mattermost_data:
  mattermost_logs:
  mattermost_config:

networks:
  mattermost_internal:
    driver: bridge
